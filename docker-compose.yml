# /opt/docker-compose.yml
---
version: '3.0'
services:
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - /opt/appdata/prometheus:/etc/prometheus
      - /opt/appdata/prometheus/data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: always
    ports:
      - 9090:9090

  nodeexporter:
    image: prom/node-exporter:v1.1.1
    container_name: nodeexporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
    restart: always
    ports:
      - 9100:9100

  grafana:
    image: grafana/grafana
    container_name: grafana
    user: 472
    volumes:
      - /opt/appdata/grafana:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=${NAME}
      - GF_SECURITY_ADMIN_PASSWORD=${PASS}
      - GF_USERS_ALLOW_SIGN_UP=false
    restart: always
    ports:
      - 3000:3000

  plex:
    image: linuxserver/plex:latest
    container_name: plex
    network_mode: host
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - VERSION=docker
      - UMASK_SET=022
      - PLEX_CLAIM=${CLAIM}
    volumes:
      - /opt/appdata/plex:/config
      - /mnt/zbeast/media:/data
    restart: unless-stopped

  pihole:
    container_name: pihole
    image: pihole/pihole:latest
    ports:
      - 53:53/tcp
      - 53:53/udp
      - 67:67/udp
      - 80:80/tcp
      - 443:443/tcp
    dns:
      - 127.0.0.1
      - 1.1.1.1
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - WEBPASSWORD=${PASS}
    volumes:
      - /opt/appdata/etc-pihole/:/etc/pihole/
      - /opt/appdata/etc-dnsmasq.d/:/etc/dnsmasq.d/
    cap_add:
      - NET_ADMIN
    restart: unless-stopped

  radarr:
    image: linuxserver/radarr:latest
    container_name: radarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - UMASK_SET=022
    volumes:
      - /opt/appdata/radarr:/config
      - /mnt/zbeast/media/downloads:/downloads
      - /mnt/zbeast/media/movies:/movies
    ports:
      - 7878:7878
    restart: unless-stopped

  sonarr:
    image: linuxserver/sonarr:latest
    container_name: sonarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - UMASK_SET=022
    volumes:
      - /opt/appdata/sonarr:/config
      - /mnt/zbeast/media/downloads:/downloads
      - /mnt/zbeast/media/tv:/tv
    ports:
      - 8989:8989
    restart: unless-stopped

  alpine-qbittorrent-openvpn:
    container_name: qbit-vpn
    image: guillaumedsde/alpine-qbittorrent-openvpn:latest
    volumes:
      - /opt/appdata/qbittorrent:/config
      - /mnt/zbeast/media/downloads/:/downloads
      - /etc/localtime:/etc/localtime:ro
    environment:
      - OPENVPN_PROVIDER=SURFSHARK
      - OPENVPN_USERNAME=${VPN_USER}
      - OPENVPN_PASSWORD=${VPN_PASS}
      - PUID=${PUID}
      - PGID=${PGID}
      - LAN=192.168.86.0/24
    ports:
      - 8080:8080
    cap_add:
      - NET_ADMIN
    restart: unless-stopped

  jackett:
    image: linuxserver/jackett
    container_name: jackett
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - AUTO_UPDATE=true  
    volumes:
      - /opt/appdata/jackett:/config
      - /mnt/zbeast/media/downloads:/downloads
    ports:
      - 9117:9117
    restart: unless-stopped
  
  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    ports:
      - 9000:9000
    volumes:
      - /opt/appdata/portainer:/data
      - /var/run/docker.sock:/var/run/docker.sock
    restart:
      always

# ----------------- Game servers ----------------- #
  minecraft:
      container_name: mc
      image: itzg/minecraft-server
      ports:
        - 25565:25565
      volumes:
        - /opt/appdata/mc:/data
      environment:
        EULA: 'true'
        MEMORY: 1G
        TZ: ${TZ}
        PLAYER_IDLE_TIMEOUT: 30
        DIFFICULTY: hard
        OPS: ${ME}
        MOTD: Join Discord @ Hollywoo Gaming, powered by Docker!
      tty: true
      stdin_open: true
      restart: always

  starbound:
    container_name: sb
    image: lacsap/starbound
    ports:
    - 21025:21025
    environment:
      - STEAM_USERNAME=${STUSER}
      - STEAM_PASSWORD=${STPASS}
    volumes:
    - /opt/appdata/starbound:/server/steamcmd/starbound
    restart: always

  valheim:
    container_name: val
    image: mbround18/valheim:latest
    ports:
      - 2456:2456/udp
      - 2457:2457/udp
      - 2458:2458/udp
    environment:
      - TZ=${TZ}
      - NAME="Hollywoo Gaming"
      - WORLD="todchavez"
      - PORT=2456
      - PUBLIC=1
      - PASSWORD=${VALPASS}
      - AUTO_UPDATE=1     
      - AUTO_UPDATE_SCHEDULE="30 4 * * *"
      - AUTO_BACKUP=1
      - AUTO_BACKUP_SCHEDULE="*/15 * * * *"
      - AUTO_BACKUP_REMOVE_OLD=1
      - AUTO_BACKUP_DAYS_TO_LIVE=3
      - AUTO_BACKUP_ON_UPDATE=1
      - AUTO_BACKUP_ON_SHUTDOWN=1
    volumes:
    - /opt/appdata/valheim/saves:/home/steam/.config/unity3d/IronGate/Valheim
    - /opt/appdata/valheim:/home/steam/valheim
    - /mnt/disk2/valheim-backups:/home/steam/backups